name: Generate report
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  generate-report:
    runs-on: ubuntu-latest
    env:
      ORG: "jcantosz-test-org"
      GH_TOKEN: "${{ secrets.TOKEN }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          gh extension install mona-actions/gh-repo-stats
          gh extension install timrogers/gh-migration-audit

      - name: Generate repo-stats report
        run: |
          echo gh repo-stats \
            --org ${ORG} \
            --token ${GH_TOKEN} \
            --token-type user

          gh repo-stats \
            --org ${ORG} \
            --token ${GH_TOKEN} \
            --token-type user

          ls -la

          mv *.csv repo-stats.csv

      - name: generate migration-audit report
        run: |
          echo gh migration-audit audit-all \
            --access-token ${GH_TOKEN} \
            --owner ${ORG} \
            --owner-type user \
            --output-path migration-audit.csv

          gh migration-audit audit-all \
            --access-token ${GH_TOKEN} \
            --owner ${ORG} \
            --owner-type user \
            --output-path migration-audit.csv

      # uses the token to get a list of repos and saves them to a file, 1 repo per line
      - name: Get list of repos
        run: |
           echo gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/$ORG/repos  --paginate -X GET  --jq '.[] | "\(.name)"' \| tee repos.txt
           gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/$ORG/repos  --paginate -X GET  --jq '.[] | "\(.name)"' | tee repos.txt

      - uses: jcantosz/Count-repo-projects@main
        with:
          github_token: ${{ secrets.TOKEN }}
          repos_file: 'repos.txt'
          org_name: 'jcantosz-test-org'
          output_file: 'repo-projects.csv'

      # This action needs a PAT, cannot use an app token
      - name: Run Project Count
        uses: jcantosz/org-app-stats@main
        with:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          GITHUB_ORG: 'jcantosz-test-org'
          OUTPUT_DIR: '.'

      # Combine all against stats so we retain all the repos data for repos it has listed
      - name: Combine stats and apps outputs
        id: combine-projects-apps
        uses: jcantosz/generate-repo-report/combine-columns@main
        with:
          base_csv_file: 'repo-stats.csv'
          additional_csv_file: 'repo-projects.csv'
          output_file: 'repo-stats-and-projects.csv'
          base_csv_columns: 'Org_Name,Repo_Name'
          additional_csv_columns: 'org_name,repo_name'

      - name: Combine reports
        id: combine-reports
        uses: jcantosz/generate-repo-report/combine-columns@main
        with:
          base_csv_file: 'repo-stats-and-projects.csv'
          additional_csv_file: 'per-repo-installations.csv'
          output_file: 'stats-projects-and-apps.csv'
          base_csv_columns: 'Org_Name,Repo_Name'
          additional_csv_columns: 'org_name,repo_name'
      
      - uses: jcantosz/generate-repo-report/rows-to-columns@main
        with:
          base_csv_file: 'stats-projects-and-apps.csv'
          additional_csv_file: 'migration-audit.csv'
          output_file: 'combined-output.csv'
          header_column_keys: 'type'
          header_column_values: 'message'
          base_csv_columns: 'Org_Name,Repo_Name'
          additional_csv_columns: 'owner,name'


      - name: upload combined report
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: combined-output.csv
          retention-days: 7
      
      - name: Bundle up all output files
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            *.csv
            *.txt
          retention-days: 7
